import type { Metadata } from "next";
import { Geist } from "next/font/google";
import { PropsWithChildren } from "react";

import "./globals.css";
import Header from "root/components/static/Header/Header";
import Footer from "root/components/static/Footer/Footer";

const geist = Geist({
  subsets: ["latin"],
  variable: "--font-geist",
  display: "swap"
});

const themeScript = `
  (function() {
    try {
      const themeHandler = (ev) => {
        const theme = ev.matches ? "dark" : "light";
        document.querySelector("html").setAttribute("data-theme", theme);
      };

      const darkModeQuery = window.matchMedia("(prefers-color-scheme: dark)");

      darkModeQuery.addEventListener("change", themeHandler)

      themeHandler(darkModeQuery)
    } catch (err) {
      console.log(err) 
    }
  })();
`;

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const RootLayout = ({ children }: PropsWithChildren) => {
  return (
    <html lang="en" className={`${geist.variable}`} suppressHydrationWarning>
      <head>
        <script dangerouslySetInnerHTML={{ __html: themeScript }} />
      </head>
      <body>
        <div className="transition-transform duration-500" id="root">
          <Header />
          {children}
          <Footer />
        </div>
      </body>
    </html>
  );
};

export default RootLayout;
